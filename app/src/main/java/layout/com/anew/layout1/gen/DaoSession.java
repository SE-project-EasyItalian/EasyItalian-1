package layout.com.anew.layout1.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import layout.com.anew.layout1.WordForDB;

import layout.com.anew.layout1.gen.WordForDBDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig wordForDBDaoConfig;

    private final WordForDBDao wordForDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        wordForDBDaoConfig = daoConfigMap.get(WordForDBDao.class).clone();
        wordForDBDaoConfig.initIdentityScope(type);

        wordForDBDao = new WordForDBDao(wordForDBDaoConfig, this);

        registerDao(WordForDB.class, wordForDBDao);
    }
    
    public void clear() {
        wordForDBDaoConfig.clearIdentityScope();
    }

    public WordForDBDao getWordForDBDao() {
        return wordForDBDao;
    }

}
